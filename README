#test different GPU layout for forest trees and different GPU code variants, to figure which layout and GPU code variant works the best.

#folder
gpu  - contains different GPU kernels
  - to generate all gpu random forest traverers, type "make all" inside gpu folder
  - five versions will be generated
    - rf_gpu_csr
    - rf_gpu_iter
    - rf_gpu_et3
    - rf_gpu_et4
    - rf_gpu_et5
  - rf_gpu_csr uses csr format gpu inputs
  - rest use hierarchical format gpu inputs

data - contains training data, trained forest_trees, and different GPU layouts such as csr, hierarchical


#run
1.to run a test on GPU, you need one of the five gpu codes.
2.you need to have two files in the same folder.
  for rf_gpu_csr, you need
  inputfile - tree_input.txt
  treefile  - treefile_csr.txt

  for rest gpu codes, you need
  inputfile - tree_input.txt
  treefile  - treefile_hier.txt
3.tree_input.txt is the same as test_input.txt
4.treefile_hier.txt can be any tdXsdY_hier.txt in the folder.
  X represents maximum depth during training the random forest.
  Y represents maximum depth of subtrees during optimization.


